// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WEPSYS_TEST.DataAccess.DataLayer;

namespace WEPSYS_TEST.DataAccess.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class TestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("WEPSYS_TEST.DataEntities.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidosEmpleado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaPermiso")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreEmpleado")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoPermisoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TipoPermisoId");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("WEPSYS_TEST.DataEntities.TipoPermiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TipoPermisos");
                });

            modelBuilder.Entity("WEPSYS_TEST.DataEntities.Permiso", b =>
                {
                    b.HasOne("WEPSYS_TEST.DataEntities.TipoPermiso", "TipoPermiso")
                        .WithMany("Posts")
                        .HasForeignKey("TipoPermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
